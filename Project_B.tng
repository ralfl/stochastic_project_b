--[[
 Project B of course of stochastics in mechanics
 Ralf Lampert, Philipp Egger, Michael Fuchs
 2013 Vienna University of Technology
 --]]
 
 
 function psd(oms)
	local N = oms:Rows()
	local ps = tmath.Matrix(N)
	for i=0, N-1 do
		local omega = oms[i]
		ps[i] = 1.0*(4*0.3^2*18^2*omega^2+18^4)/((18^2-omega^2)^2+4*0.3^2*18^2*omega^2)
	end
	return ps, oms
  end
 
 N=1500
 NN=N/2+1
 dt=0.02
 ommax = math.pi/dt
 domega = ommax/NN
 
 omegas = tmath.Matrix(NN)
 omegas:SetLinearRows(0, ommax)
 PSD = psd(omegas);
 
 var = tmath.Sum(PSD)*2*domega
 
 vis1 = graph.Graph("Power Spectral Density", "Bright")
 vis1:AxisLabels("Omega [rad/sec]", "PSD [m^2/s]")
 vis1:Plot(omegas, PSD, 1, "PSD")
 
 SQPS = (PSD*ommax):CW():Sqrt()
 
 re = stoch.Simulate(NN,1):CW()*SQPS
 im = stoch.Simulate(NN,1):CW()*SQPS
 
 b, dt = spectral.IFT(re:AppendCols(im), domega)
 
 var1 = stoch.Sigma(b:Transpose())[0]^2
 t = tmath.Matrix(N)
 t:SetLinearRows(0,(N)*dt)
 
 vis2 = graph.Graph("Time series", "Bright")
 vis2:AxisLabels("Time [s]", "Acceleration [m/s^2]")
 vis2:Plot(t, b, 1, "Acceleration")
 
 -- print("var", var, "var1", var1)
 
 e = tmath.Matrix(N)
 a = tmath.Matrix(N)
 F = tmath.Matrix(N)
 
 for i=0, N-1 do
	e[i] = 4*(math.exp(-0.25*t[i])-math.exp(-0.5*t[i])) -- einheitenlos, werte von 0 bis 1 als filter
	a[i] = e[i]*b[i]			-- m/s^2 (Bodenbeschleunigung)
    F[i] = -400000*a[i] 		-- kg * m/s^2 = N
 end
 
 vis3 = graph.Graph("Filterfunction", "Bright")
 vis3:AxisLabels("Time [s]", "Exponential envelope [-]")
 vis3:Plot(t, e, 1, "envelope")
 
 vis4 = graph.Graph("Acceleration", "Bright")
 vis4:AxisLabels("Time [s]", "Ground acceleration [m/s^2]")
 vis4:Plot(t, a, 1, "Acceleration")

 vis5 = graph.Graph("Loading Force", "Bright")
 vis5:AxisLabels("Time [s]", "Groundforce [kN]")
 vis5:Plot(t, F/1000, 1, "Force")
 
 E = 210e9 			-- 210 GPa = 210*10^9 N/m^2
 m = 400e3 			-- 400t = 400*10^3 kg
 H = 6				-- 6m Stuetzenhoehe
 b = .5
 I = b^4/12 		-- Traegheitsmoment m^4
 k = 4*12*E*I/H^3
 omega_0 = math.sqrt(k/m)
 c = 2*0.02*math.sqrt(k*m)
 time = 0;
 x0 = 0;
 v0 = 0;
 a0 = -(c*v0+k*x0)/m
 xm1 = x0 -a0*dt*dt/2

 result = tmath.Matrix(N,2)
 i=0
 result[{0,0}] = time;
 result[{0,1}] = x0;
 for i=0, N-1 do
	a1 = F[i] - (k-2/dt^2*m)*x0 - (m/dt^2-c/2/dt)*xm1;
	x1 = a1/(m/dt^2+c/2/dt);
	xm1 = x0;
	x0 = x1;
	time = i*dt;
	result[{i,0}] = time;
	result[{i,1}] = x0;
 end 
 
 vis6 = graph.Graph("Displacement", "Bright")
 vis6:AxisLabels("Time [s]", "Top Displacement [cm]")
 vis6:Plot(result:GetCols(0), result:GetCols(1)*100, 1, "Displacment")